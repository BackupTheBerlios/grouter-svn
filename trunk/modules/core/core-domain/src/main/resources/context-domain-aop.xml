<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
  default-autowire="byName">


  <!--
    Transaction advice applied to all service methods.
    Rollback on the cheked exception ValidationException, since we don't want to save invalid data,
    and we also want the controllers to have to try-catch that exception to show validation errors.
  -->

  <aop:config>
    <aop:pointcut id="serviceMethod" expression="execution(* org.grouter.domain.service.spring.*.*(..))" />
    <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" order="1" />
  </aop:config>

  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true" />
      <tx:method name="find*" read-only="true" />
      <!-- tx:method name="*" rollback-for=".......CustomeException" / -->
    </tx:attributes>
  </tx:advice>


  


</beans>