<map version="0.8.0">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1162980200231" ID="Freemind_Link_25963424" MODIFIED="1162980205756" TEXT="Hibernate">
<node CREATED="1162980209349" ID="_" MODIFIED="1162980213750" POSITION="right" TEXT="many-to-one">
<node CREATED="1162980214714" ID="Freemind_Link_65704617" MODIFIED="1162984499697" TEXT="&lt;many-to-one&#xa;                name=&quot;userType&quot;&#xa;                fetch=&quot;join&quot;&#xa;                column=&quot;usertype_id&quot;&#xa;                class=&quot;org.data.model.UserType&quot;&#xa;                not-null=&quot;true&quot;/&gt;">
<node CREATED="1162981000716" ID="Freemind_Link_923656387" MODIFIED="1162981016408" TEXT="fetch = &quot;join&quot;">
<node CREATED="1162981016892" ID="Freemind_Link_72786137" MODIFIED="1162981096636" TEXT="When loading the entity the the UserType &#xa;is joined and loaded - not lazy."/>
</node>
<node CREATED="1162984440486" ID="Freemind_Link_897268976" MODIFIED="1162984450140" TEXT="fetch defaults to select"/>
<node CREATED="1162984451373" ID="Freemind_Link_1853050770" MODIFIED="1162984461809" TEXT="deafult behaviour i lazy -&gt; not loaded"/>
</node>
</node>
<node CREATED="1163661861442" ID="Freemind_Link_752959852" MODIFIED="1163661868636" POSITION="left" TEXT="Enitites vs value types">
<node CREATED="1163661869613" ID="Freemind_Link_979776521" MODIFIED="1163661922965" TEXT="An entity has an id, a value type does not. A value &#xa;type is embedded in an entity"/>
</node>
<node CREATED="1163661953904" ID="Freemind_Link_1267752651" MODIFIED="1163661960915" POSITION="right" TEXT="Identity and Equality">
<node CREATED="1163662097260" ID="Freemind_Link_1439805129" MODIFIED="1163662112000" TEXT="3 types">
<node CREATED="1164264017900" ID="Freemind_Link_1273551039" MODIFIED="1164264022835" TEXT="database identity">
<node CREATED="1163662014081" ID="Freemind_Link_1780229505" MODIFIED="1164264114010" TEXT="Objects stored in a relational database are identical if they represent the &#xa;same row or, equival-  ently, if they share the same table and primary key value. "/>
</node>
<node CREATED="1164264029324" ID="Freemind_Link_1321138164" MODIFIED="1164264034487" TEXT="java equality">
<node CREATED="1163661961688" ID="Freemind_Link_511151182" MODIFIED="1164265720369" TEXT="Objects are equal if they have the same &#x201c;value&#x201d;, as defined by the equals(Object o) &#xa;method. Classes which do not explicitly override this method inherit the implementation &#xa;defined by java.lang.Object, which just compares object identity (a == b)">
<node CREATED="1163661981921" ID="Freemind_Link_1379198189" MODIFIED="1163661981921" TEXT=""/>
<node CREATED="1164265941056" ID="Freemind_Link_779360186" MODIFIED="1164265943022" TEXT="The identity  scope guarantee provided by Hibernate is quite appropriate if you never compare detached in-  stances, that is, if you never put detached instances into the same Set."/>
</node>
</node>
<node CREATED="1164264048660" ID="Freemind_Link_777883690" MODIFIED="1164264052584" TEXT="object identity">
<node CREATED="1163662003073" ID="Freemind_Link_1131542889" MODIFIED="1164264071180" TEXT="Objects are identical if they occupy the same memory location in the &#xa;JVM. This can be  checked by using the == operator. ">
<node CREATED="1164265482497" ID="Freemind_Link_1759166930" MODIFIED="1164265552672" TEXT="Guaranteed by Hibernate in a persistence context for a unit of work:&#xa;Session session1 = sessionFactory.openSession(); &#xa;Transaction tx1 = session.beginTransaction(); &#xa;// Load Item with identifier value &quot;1234&quot; &#xa;Object a = session1.get(Item.class, new Long(1234) ); &#xa;Object b = session1.get(Item.class, new Long(1234) ); &#xa;( a==b ) // True, persistent a and b are identical &#xa;tx1.commit(); &#xa;session1.close(); &#xa;"/>
</node>
</node>
</node>
<node CREATED="1163662115213" ID="Freemind_Link_1948034218" MODIFIED="1163662119936" TEXT="Surrogate key">
<node CREATED="1163662120237" ID="Freemind_Link_766273705" MODIFIED="1163662121520" TEXT=" Surrogate keys have no business meaning&#x2014;they are unique values generated by the  database or application."/>
</node>
</node>
<node CREATED="1163669518722" ID="Freemind_Link_767204511" MODIFIED="1163669522318" POSITION="left" TEXT="auto-import">
<node CREATED="1163669522930" ID="Freemind_Link_1217072444" MODIFIED="1163669569479" TEXT="auto-import can be be turned off if two classes  with the same name exist for a given SessionFactory, maybe in different packages of the domain model.  "/>
</node>
<node CREATED="1163670791572" ID="Freemind_Link_890083932" MODIFIED="1163670794583" POSITION="right" TEXT="immutable">
<node CREATED="1163670795387" ID="Freemind_Link_646140482" MODIFIED="1163670835612" TEXT="Avoids updte on an entity. Hibernate can make a few other optimizations, like avoiding &#xa;dirty checking, if you map an  immutable class with the mutable attribute set to false."/>
<node CREATED="1163670864774" ID="Freemind_Link_311717088" MODIFIED="1163670875719" TEXT="@Entity &#xa;@org.hibernate.annotations.Entity(mutable = false) &#xa;@org.hibernate.annotations.AccessType(&quot;field&quot;) &#xa;public class Bid"/>
</node>
<node CREATED="1166174206450" ID="Freemind_Link_1324876783" MODIFIED="1166174209246" POSITION="left" TEXT="join table">
<node CREATED="1166174210168" ID="Freemind_Link_935881596" MODIFIED="1166174230980" TEXT="use when you have a couple of columns with lot of null rows">
<node CREATED="1166174232072" ID="Freemind_Link_91178731" MODIFIED="1166174232072" TEXT=""/>
</node>
<node CREATED="1166174235545" ID="Freemind_Link_1679687468" MODIFIED="1166174251621" TEXT="little more expensive since joinining with other table"/>
<node CREATED="1166174386499" ID="Freemind_Link_707087250" MODIFIED="1166174775515" TEXT=" &lt;class name=&quot;com.eniro.classifieds.motor.core.data.model.CarDataAdFeatureValue&quot;&#xa;    table=&quot;motor_cardata_ad_feature_value&quot;&gt;&#xa;    &lt;cache usage=&quot;read-write&quot; /&gt;&#xa;    &lt;id name=&quot;id&quot;&gt;&#xa;      &lt;generator class=&quot;native&quot; /&gt;&#xa;    &lt;/id&gt;&#xa;    &lt;property name=&quot;textValue&quot; column=&quot;value&quot; /&gt;&#xa;    &lt;many-to-one name=&quot;adFeature&quot; column=&quot;ad_feature_id&quot; class=&quot;com.eniro.classifieds.data.model.AdFeature&quot;&#xa;      not-null=&quot;true&quot; /&gt;&#xa;&#xa;    &lt;many-to-one name=&quot;ad&quot; column=&quot;ad_id&quot; class=&quot;com.eniro.classifieds.data.model.Ad&quot; not-null=&quot;true&quot; /&gt;&#xa;&#xa;    &lt;many-to-one name=&quot;carData&quot; column=&quot;car_data_id&quot; class=&quot;com.eniro.classifieds.motor.core.data.model.CarData&quot;&#xa;      not-null=&quot;true&quot; fetch=&quot;join&quot; /&gt;&#xa;&#xa;    &lt;many-to-one name=&quot;adFeatureUnit&quot; column=&quot;ad_feature_unit_id&quot; class=&quot;com.eniro.classifieds.data.model.AdFeatureUnit&quot;&#xa;      not-null=&quot;false&quot; /&gt;&#xa;&#xa;    &lt;join table=&quot;motor_cardata_ad_feature_value_attributes&quot; optional=&quot;true&quot;&gt;&#xa;      &lt;key column=&quot;cardata_ad_feature_value_id&quot; /&gt;&#xa;      &lt;property name=&quot;price&quot; /&gt;&#xa;      &lt;property name=&quot;accessoryType&quot; column=&quot;accessory_type&quot; /&gt;&#xa;    &lt;/join&gt;"/>
</node>
</node>
</map>
