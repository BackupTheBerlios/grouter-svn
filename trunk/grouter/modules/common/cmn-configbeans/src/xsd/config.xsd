<?xml version="1.0" encoding="UTF-8"?>
<xs:schema  targetNamespace="http://grouter.org/config.xsd"
            xmlns="http://grouter.org/config.xsd"
            xmlns:xs="http://www.w3.org/2001/XMLSchema"
            xmlns:mstns="http://grouter.org/config.xsd"
            elementFormDefault="qualified">
	<!-- Root element  -->
	<xs:element name="GrouterConfig">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="GlobalSettings" type="globalSettingsType"/>
				<xs:element name="Node" type="nodeType" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- First level 	-->		
	<!-- GlobalSettings -->	
	<xs:complexType name="globalSettingsType">
		<xs:sequence>
			<xs:element name="ArchiveHandler" type="archiveHandlerType"/>
			<xs:element name="Email" type="emailType"/>
			<!-- xs:element ref="FeederRootPath"/ -->
		</xs:sequence>
	</xs:complexType>
	
	<!-- FeederNode -->
	<xs:complexType name="nodeType">
		<xs:sequence>
			<xs:element name="poll" type="pollType" minOccurs="0"/>
			<xs:element name="inFolderConfig" type="inFolderType" minOccurs="0"/>
			<xs:element name="outFolderConfig" type="outFolderType" minOccurs="0"/>
            <xs:element name="emailSettings" type="emailSettingsType" minOccurs="0"/>
            <xs:element name="backup" type="backupType" minOccurs="0"/>
			<xs:element name="transform" type="transformType" minOccurs="0"/>
			<xs:element name="error" type="errorType"/>
			<xs:element name="inactivity" type="inactivityType"/>
			<xs:element name="nameService" type="nameServiceType" minOccurs="0"/>
			<!-- xs:element name="applicationlogger" type="loggingType"/>
			<xs:element name="messagelogger" type="loggingType"/ -->
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="required"/>
		<xs:attribute name="id" use="required"/>
		<xs:attribute name="useRelativeRootpath" type="xs:boolean" use="required"/>
		<xs:attribute name="createuniquename" type="xs:boolean"/>
	</xs:complexType>
	
	<!-- FeederNode::pollType -->
	<xs:complexType name="pollType">
		<xs:sequence>
			<xs:element ref="message"/>
			<xs:element ref="pollIntervallMilliSeconds"/>
		</xs:sequence>
	</xs:complexType>
	
	<!-- FeederNode::infolderType -->
	<xs:complexType name="inFolderType">
		<xs:sequence>
			<xs:element ref="inFolderPath"/>
			<xs:element ref="pollIntervallMilliSeconds"/>
			<xs:element ref="skipFirstblankline"/>
			<xs:element ref="sortAlpha" minOccurs="0"/>
			<xs:element name="batchReadConfig" type="batchReadType"/>
		</xs:sequence>
	</xs:complexType>
	
	<!-- FeederNode::emailsettingsType -->
	<xs:complexType name="emailSettingsType">
        <xs:sequence>
			<xs:element ref="emailBatchSize"/>
			<xs:element ref="emailSendIntervallInMilliSeconds"/>
		</xs:sequence>
	</xs:complexType>

	<!-- FeederNode::outfolderType -->
	<xs:complexType name="outFolderType">
		<xs:sequence>
			<xs:element ref="outFolderPath"/>
		</xs:sequence>
	</xs:complexType>
	
	<!-- FeederNode::backupType -->	
	<xs:complexType name="backupType">
		<xs:sequence>
			<xs:element ref="backupFolderPath"/>
			<xs:element ref="archiveFolderPath"/>
			<xs:element ref="sortAlpha" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="backupHandlerOn" type="xs:boolean" use="required"/>
		<xs:attribute name="archiveroOn" type="xs:boolean" use="required"/>
	</xs:complexType>
	
	<!-- FeederNode::transformType -->	
	<xs:complexType name="transformType">
		<xs:sequence>
			<xs:element name="transformFile" type="transformFileType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="transformOn" type="xs:boolean" use="required"/>
	</xs:complexType>

	<!-- FeederNode::errorType -->	
	<xs:complexType name="errorType">
		<xs:sequence>
			<xs:element ref="errorFolderPath"/>
			<xs:element ref="errorInFolderPath"/>
			<xs:element ref="sortOnResend"/>
			<xs:element ref="CronJob"/>
			<xs:element name="errorNotification" type="errorNotificationType"/>
		</xs:sequence>
		<xs:attribute name="errorHandlerOn" type="xs:boolean" use="required"/>
	</xs:complexType>

	<!-- FeederNode::inactivityType -->		
	<xs:complexType name="inactivityType">
		<xs:sequence>
			<xs:element ref="maxInactivityPeriodInMilliSeconds" minOccurs="0"/>
			<xs:element ref="emailOnInactivity" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="inactivityOn" type="xs:boolean" use="required"/>
	</xs:complexType>
	
	<!-- FeederNode::nameserviceType -->		
	<xs:complexType name="nameServiceType">
		<xs:sequence>
			<xs:element ref="iorPath"/>
			<xs:element ref="objectName"/>
			<xs:element ref="objectMethod"/>
			<xs:element ref="paramType"/>
			<xs:element ref="reconnectToObjectInMilliSeconds"/>
			<xs:element ref="reconnectToObjectPolicy"/>
		</xs:sequence>
	</xs:complexType>



	<xs:complexType name="appenderType">
		<xs:sequence>
			<xs:element ref="maxFileSize" minOccurs="0"/>
			<xs:element ref="maxBackupIndex" minOccurs="0"/>
			<xs:element ref="rollingSchedule" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="required"/>
	</xs:complexType>
	<xs:element name="archiveFolderPath" type="xs:anyURI"/>
	<xs:complexType name="archiveHandlerType">
		<xs:sequence>
			<xs:element ref="CronJob"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="backupFolderPath" type="xs:anyURI"/>
	<xs:element name="emailBatchSize" type="xs:short"/>
	<xs:complexType name="emailNotificationType">
		<xs:sequence>
			<xs:element ref="emailOnFailure"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="emailOnFailure" type="xs:anyURI"/>
	<xs:element name="emailSendIntervallInMilliSeconds" type="xs:long"/>
	<xs:element name="emailService" type="xs:anyURI"/>
	
	<xs:element name="maxInactivityPeriodInMilliSeconds" type="xs:long"/>
	<xs:element name="emailOnInactivity" type="xs:anyURI"/>
	
	<xs:element name="errorFolderPath" type="xs:anyURI"/>
	<xs:element name="errorInFolderPath" type="xs:anyURI"/>

	<xs:complexType name="errorNotificationType">
		<xs:sequence>
			<xs:element ref="notifyEveryIntervallInMilliSeconds" minOccurs="0"/>
			<xs:element ref="numberOfErrors" minOccurs="0"/>
			<xs:element name="emailNotification" type="emailNotificationType" minOccurs="0"/>
			<xs:element name="sms" type="smsType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="errorNotificationOn" type="xs:boolean" use="required"/>
	</xs:complexType>
	<xs:element name="notifyEveryIntervallInMilliSeconds" type="xs:long"/>
	<xs:element name="batchSize" type="xs:short"/>
	<xs:element name="batchThreshold" type="xs:short"/>
	<xs:element name="inFolderPath" type="xs:anyURI"/>
	<xs:complexType name="batchReadType">
		<xs:sequence>
			<xs:element ref="batchSize"/>
			<xs:element ref="batchThreshold"/>
		</xs:sequence>
		<xs:attribute name="isBatchOn" type="xs:boolean" use="required"/>
	</xs:complexType>
	<xs:element name="CronJob" type="cronIntervallType"/>
	<xs:simpleType name="cronIntervallType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:element name="pollIntervallMilliSeconds">
		<xs:simpleType>
			<xs:restriction base="xs:long">
				<xs:minInclusive value="2000"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="logFolderPath" type="xs:anyURI"/>
	<!--xs:complexType name="loggingType">
		<xs:sequence>
			<xs:element name="appender" type="appenderType"/>
			<xs:element ref="logpattern"/>
			<xs:element ref="logfolderpath"/>
			<xs:element ref="loglevel"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="logpattern" type="xs:string"/>
	<xs:element name="loglevel" type="loglevelType"/>
	<xs:simpleType name="loglevelType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="DEBUG"/>
			<xs:enumeration value="INFO"/>
			<xs:enumeration value="WARN"/>
			<xs:enumeration value="ERROR"/>
			<xs:enumeration value="FATAL"/>
		</xs:restriction>
	</xs:simpleType-->
	<xs:element name="maxBackupIndex" type="xs:short"/>
	<xs:element name="maxFileSize" type="xs:string"/>
	<xs:element name="rollingSchedule" type="xs:string"/>
	<xs:element name="message" type="xs:string"/>
	
	<xs:element name="iorPath" type="xs:anyURI"/>
	<xs:element name="objectMethod" type="xs:string"/>
	<xs:element name="objectName" type="xs:string"/>
	<xs:element name="paramType" type="xs:string"/>
	<xs:element name="reconnectToObjectInMilliSeconds" type="xs:long"/>
	<xs:element name="reconnectToObjectPolicy" type="reconnectToObjectPolicyType"/>
	<xs:simpleType name="reconnectToObjectPolicyType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="reconnectOnNewMessage"/>
			<xs:enumeration value="reconnectForever"/>
			<xs:enumeration value="doNotReconnect"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="numberOfErrors" type="xs:short"/>
	<xs:element name="outFolderPath" type="xs:anyURI"/>
	<xs:element name="servicerootpath" type="xs:anyURI"/>
	<xs:element name="skipFirstblankline" type="xs:boolean"/>
	<xs:complexType name="smsType">
		<xs:sequence>
			<xs:element ref="smsOnFailure"/>
			<xs:element ref="smsService"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="smsOnFailure" type="xs:anyURI"/>
	<xs:element name="smsService" type="xs:anyURI"/>
	<xs:element name="sortAlpha" type="xs:boolean"/>
	<xs:element name="sortOnResend" type="xs:boolean"/>
	
	<xs:complexType name="transformFileType">
		<xs:simpleContent>
			<xs:extension base="transformFileSimpleType">
				<xs:attribute name="transformmessage" type="xs:string" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="transformFileSimpleType">
		<xs:restriction base="xs:anyURI"/>
	</xs:simpleType>
	<xs:complexType name="emailType">
		<xs:sequence>
			<xs:element name="smtp" type="smtpType" minOccurs="0"/>
			<xs:element name="pop" type="popType" minOccurs="0"/>
			<xs:element name="imap" type="imapType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="sendintervallInMilliSeconds" type="xs:long" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="imapType">
		<xs:sequence>
			<xs:element name="imapserver" type="imapserverType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="imapserverType">
		<xs:simpleContent>
			<xs:extension base="imapserverSimpleType">
				<xs:attribute name="id" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="imapserverSimpleType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="popType">
		<xs:sequence>
			<xs:element name="popserver" type="popserverType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="popserverType">
		<xs:simpleContent>
			<xs:extension base="popserverSimpleType">
				<xs:attribute name="id" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="popserverSimpleType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
	<xs:complexType name="smtpType">
		<xs:sequence>
			<xs:element name="smtpserver" type="smtpserverType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="smtpserverType">
		<xs:simpleContent>
			<xs:extension base="smtpserverSimpleType">
				<xs:attribute name="id" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:simpleType name="smtpserverSimpleType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
