<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
        "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <!-- Hibernate datasouce to be injected. -->
    <bean id="dataSourceHsqldb" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>org.hsqldb.jdbcDriver</value></property>
        <!-- if external process use this property name="url"><value>jdbc:hsqldb:db/test</value></property-->
        <property name="url"><value>jdbc:hsqldb:mem:domaintest</value></property>
        <!-- Make sure <value> tags are on same line - if they're not, authentication will fail -->
        <property name="username"><value>sa</value></property>
        <property name="password"><value></value></property>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource"><ref local="dataSourceHsqldb"/></property>
        <property name="mappingResources">
            <list>
                <value>org/grouter/domain/systemuser/SystemUser.hbm.xml</value>
                <value>org/grouter/domain/systemuser/SystemGroup.hbm.xml</value>
                <value>org/grouter/domain/systemuser/Password.hbm.xml</value>
                <value>org/grouter/domain/Message.hbm.xml</value>
                <value>org/grouter/domain/Receiver.hbm.xml</value>
                <value>org/grouter/domain/Sender.hbm.xml</value>
                <value>org/grouter/domain/Node.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <!-- Need to inject this for the DAOFactory. -->
    <!-- bean id="hibutil" class="org.grouter.common.hibernate.HibernateUtil">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean -->


    <!-- Need to inject this for the DAOFactory -->
    <bean id="hibernateSpringDAOFactory" class="org.grouter.domain.dao.hibernate.HibernateSpringDAOFactory">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <bean id="grouterService" class="org.grouter.domain.servicelayer.spring.GRouterService">
    </bean>

    <!-- Proxy to use for a transaction demarcated messageservice. Rollback is only done for
     runtime exceptions - if you need rollback for non runtime exceptions (business exceptions)
     then include them in the service method below.-->
    <bean id="messageServiceManager"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager"/></property>
        <property name="target"><ref local="grouterService"/></property>
        <property name="transactionAttributes">
            <props>
                <prop key="createSystemUser">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
</beans>